{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "kaka"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "def data_change(file):\n",
    "    f = pd.read_csv(file,encoding='Shift-JIS')\n",
    "    f.columns=list('XY')\n",
    "    d1 = f[f['X']=='XYDATA'].index\n",
    "    d2 = np.array(d1) + 1\n",
    "    d3 = f[f['X']=='##### Extended Information'].index\n",
    "    d3 = np.array(d3) - 1\n",
    "    XDATA = f.iloc[d2[0]:d3[0],0:1]\n",
    "    YDATA = f.iloc[d2[0]:d3[0],1:2]\n",
    "    x = np.array(XDATA)\n",
    "    y = np.array(YDATA) \n",
    "    x = [float(s) for s in x]\n",
    "    y = [float(s) for s in y]\n",
    "    x = np.array(x)\n",
    "    y = np.array(y)\n",
    "    return x,y\n",
    "\n",
    "\n",
    "#convert to absorption\n",
    "def convert_cal(x1,y1,x2,y2):\n",
    "    y = y1/y2\n",
    "    y = np.log(y)\n",
    "    print(y)\n",
    "    if x1.all() == x2.all():\n",
    "        return x1,y\n",
    "    else :\n",
    "        return False\n",
    "\n",
    "#plot function\n",
    "def plot(x,y):\n",
    "    plt.plot(x,y)\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "\n",
    "file1 = input('Enter Background Filename : ')\n",
    "file2 = input('Enter Sample Filename : ')\n",
    "x1,y1 = data_change(file1)\n",
    "x2,y2 = data_change(file2)\n",
    "x,y = convert_cal(x1,y1,x2,y2)\n",
    "plot(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
